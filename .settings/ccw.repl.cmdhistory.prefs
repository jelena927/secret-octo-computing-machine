cmdhistory=["(reduce \\r\\n       \#(let [current-key (keyword (\:object_id %2))] \\r\\n          (assoc % current-key \\r\\n            (if (contains? % current-key) \\r\\n              (inc (current-key %)) \\r\\n              1))) \\r\\n       {} \\r\\n       (\:rows (get-match-rows \\"Art\\")))" "(reduce \\r\\n       \#(let [current-key (keyword (\:object_id %2))] \\r\\n          (assoc % current-key \\r\\n            (if (contains? % current-key) \\r\\n              (inc (current-key %)) \\r\\n              1))) \\r\\n       {} \\r\\n       '({\:location_2 90, \:location 91, \:object_id 2247})))" "(reduce \\r\\n       \#(let [current-key (keyword (\:object_id %2))] \\r\\n          (assoc % current-key \\r\\n            (if (contains? % current-key) \\r\\n              (inc (current-key %)) \\r\\n              1))) \\r\\n       {} \\r\\n       '({\:location_2 90, \:location 91, \:object_id 2247}))" "(\:rows (get-match-rows \\"Art Asian\\"))" "(keyword 1)" "(keyword \\"1\\")" "(frequecy-score (\:rows (get-match-rows \\"Art Asian\\")))" "(location-score (\:rows (get-match-rows \\"Art Asian\\")))" "(distance-score (\:rows (get-match-rows \\"Art Asian\\")))" "(distance-score (\:rows (get-match-rows \\"Art wood\\")))" "(get-match-rows \\"Art wood\\"))" "(get-match-rows \\"Art wood\\")" "(get-match-rows \\"Art wooden\\")" "(get-match-rows \\"Art Edo\\")" "(distance-score (\:rows (get-match-rows \\"Art Edo\\")))" "(query \\"Art\\")" "(get-object-name \\"1946\\")" "(get-object-name 1946)" "(query \\"Art\\")" "(query \\"Art Edo\\")" "(browse-art.core/db-initial-setup)" "(browse-art.core/import_data browse-art.core/get_data_url)" "(browse-art.indexer/add-to-index (browse-art.core/import_data browse-art.core/get_data_url))" "(browse-art.db/select-all \\"word_list\\")" "(browse-art.search-engine/query \\"art\\")" "(browse-art.search-engine/query \\"art americA\\")" "(browse-art.search-engine/query \\"art america\\")" "(browse-art.search-engine/query \\"Art america\\")" "(browse-art.search-engine/query \\"Art Japan\\")" "(browse-art.search-engine/query \\"Art wood\\")" "(browse-art.search-engine/query \\"Art wooden\\")" "(browse-art.search-engine/query \\"Art print\\")" "(browse-art.search-engine/query \\"Art print Japan\\")" "(browse-art.search-engine/query \\"wood Art\\")" "(browse-art.search-engine/query \\"Art\\")" "(browse-art.search-engine/query \\"Art wood\\")" "(browse-art.search-engine/query \\"wood\\")" "(browse-art.search-engine/get-match-rows \\"wood\\")" "(browse-art.search-engine/get-match-rows \\"art\\")" "(browse-art.search-engine/get-match-rows \\"wood\\")" "(browse-art.search-engine/get-match-rows \\"wood art\\")" "(browse-art.search-engine/query \\"wood\\")" "(browse-art.search-engine/query \\"wood art\\")" "(\:rows {\:rows nil, \:word-ids []})" "(if (\:rows {\:rows nil, \:word-ids []}) 1 2)" "(browse-art.search-engine/query \\"wood\\")" "(if nil 1 2)" "(if \\"\\" 1 2)" "(browse-art.search-engine/query \\"wood\\")" "(browse-art.search-engine/query \\"wood art\\")" "(browse-art.search-engine/query \\"art\\")" "(browse-art.data-loader/import_data browse-art.data-loader/get_data_url\\n                                    )" "(browse-art.data-loader/import_data \\n  browse-art.data-loader/get_data_url\\n                                    )" "(browse-art.indexer/add-to-index (browse-art.data-loader/import_data \\n     browse-art.data-loader/get_data_url))" "(browse-art.core/db-initial-setup)" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "browse-art.data-loader/get_data_url" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "browse-art.data-loader/get_data_url" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(browse-art.search-engine \\"art\\")" "(browse-art.search-engine/query \\"art\\")" "(browse-art.data-loader \\"http\://api.thewalters.org/v1/objects.json?apikey\=4vyusmfXspfNUhVaDufgl8hxeGmoTWxZtLBL5AlGZF12KkVizFhFcbFwD0Gc0r3L&classification\=print&page\=3&pageSize\=100\\")" "(browse-art.data-loader/import_data \\"http\://api.thewalters.org/v1/objects.json?apikey\=4vyusmfXspfNUhVaDufgl8hxeGmoTWxZtLBL5AlGZF12KkVizFhFcbFwD0Gc0r3L&classification\=print&page\=3&pageSize\=100\\")" "(browse-art.db/select-all \\"word_location\\")" "(browse-art.db/get-object-name 115)" "(browse-art.search-engine/query \\"art\\")" "(browse-art.db/get-object-name 115)" "(browse-art.search-engine/query \\"art\\")" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (create-new-entry \\"word_list\\" \\"word\\" \\"value\\"\\n                                        )))" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (create-new-entry \\"word_list\\" \\"word\\" \\"valueaa\\"\\n                                        )))" "(jdbc/with-connection db-spec\\r\\n    (jdbc/set-rollback-only))" "(select-all \\"word_list\\")" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(db/start-transaction \\n  (browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url)))" "(browse-art.db/start-transaction \\n  (browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url)))" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(select-all \\"word_list\\")" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(select-all \\"word_list\\")" "(browse-art.data-loader/get_data_url)" "browse-art.data-loader/get_data_url" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(.abs 0)" "(.abs 1)" "(.abs \\"1\\")" "(.abs -1)" "(browse-art.indexer/add-to-index \\n  (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))" "(timr (.abs -1))" "(time (.abs -1))" "(time (+ 1 -1))" "(\= 'a (quote a))" "(\= `a (quote a))" "(time (browse-art.db/start-transaction (browse-art.indexer/add-to-index \\n           (browse-art.data-loader/import_data browse-art.data-loader/get_data_url))))" "(time (jdbc/with-connection db-spec (jdbc/transaction (browse-art.indexer/add-to-index \\n               (browse-art.data-loader/import_data browse-art.data-loader/get_data_url)))))" "(browse-art.core/db-initial-setup)" "(time (jdbc/with-connection db-spec (jdbc/transaction (browse-art.indexer/add-to-index \\n               (browse-art.data-loader/import_data browse-art.data-loader/get_data_url)))))" "(select-all \\"object_list\\")" "(select-all \\"word_list\\")" "(select-all \\"word_location\\")" "(select-all \\"object_list\\")" "(query \\"art\\")" "(.stop server)" "server" "(.stop server)" "(start server)" "(.start server)" "(.stop server)" "(.start server)" "(browse-art.db.db/execute-query \\n  \\"count(*) from object_list\\")" "(browse-art.db.db/execute-query \\n  \\"select count(*) from object_list\\")" "(time (browse-art.data.indexer/add-to-index\\n        browse-art.data.data-loader/get_data_url))" "((browse-art.db.db/get-id \\"object_list\\" \\"object_id\\" object-id))" "((browse-art.db.db/get-id \\"object_list\\" \\"object_id\\" \\n                          115))" "((browse-art.db.db/get-id \\"object_list\\" \\"object_id\\" \\n                          1000))" "(defn get-id\\r\\n  [table field value]\\r\\n  (jdbc/with-connection db-spec\\r\\n    (jdbc/with-query-results res \\r\\n      [(str \\"select id from \\" table \\" where \\" field \\"\='\\" (clojure.string/replace value \#\\"'\\" \\"''\\") \\"'\\")];escaping apostrophe char\\r\\n      (first res))))" "(get-id \\"object_list\\" \\"object_id\\" \\n                          1000)" "(get-id \\"object_list\\" \\"object_id\\" \\n                          115)" "((browse-art.db.db/get-id \\"object_list\\" \\"object_id\\" \\n                          1000))" "(browse-art.db.db/get-id \\"object_list\\" \\"object_id\\" \\n                          1000)" "(time (browse-art.data.indexer/add-to-index\\n        (browse-art.data.data-loader/import_data browse-art.data.data-loader/get_data_url)))" "(browse-art.db.db/execute-query \\n  \\"select count(*) from object_list\\")" "(browse-art.search.search-engine/query \\"git\\")" "(browse-art.search.search-engine/query \\"boat\\")" "(browse-art.search.search-engine/query \\"boat luck\\n\\")" "(browse-art.search.search-engine/query \\n  \\"good\\n\\")" "(browse-art.search.search-engine/query \\n  \\"good\\")" "(trim \\"a \\")" "(clojure.string/trim \\"a \\")" "(clojure.string/trim \\"a \\n\\")" "(clojure.string/trim \\"a\\n\\")" "(browse-art.search.search-engine/query \\n  \\"good\\")" "(browse-art.search.search-engine/query \\n  \\"good \\")" "(browse-art.search.search-engine/query \\n  \\"cat plant\\")" "(browse-art.db.db/execute-query \\"select * from \\nobject_list where object_id\=11701\\")" "(browse-art.search.search-engine/query \\n  \\"Tokaido gojusan tsui\\")" "(browse-art.db.db/execute-query \\"select * from \\nobject_list where object_id in (10449,  37047)\\")" "(browse-art.search.search-engine/query \\n  \\"Tokaido gojusan tsui\\")" "(browse-art.db.db/execute-query \\"select * from \\nword_list\\")" "(browse-art.search.search-engine/query \\n  \\"The\\")" "(browse-art.search.search-engine/query \\n  \\"or\\")" "(empty? \\"\\")" "(empty? nil)" "(empty? \\"a\\")" "(empty? \\"a d\\")" "(browse-art.search.search-engine/query \\"one\\")" "(first [\:79295 4.0])" "((name first [\:79295 4.0]))" "(name( first [\:79295 4.0]))" "(into 1 [\:79295 4.0])" "(into [\:79295 4.0] 1)" "(conj [\:79295 4.0] 1)" "(conj [\:79295 4.0] \\"ads\\")" "(browse-art.search.search-engine/query \\"one\\")" "(browse-art.db.db/select-all \\"object_list\\")" "(browse-art.db.db/get-object-image 115)" "(browse-art.db.db/get-object-image 11834)" "(browse-art.search.search-engine/query \\"one\\")" "(conj [1 2] [3])" "(conj [[1 2]] [3])" "(browse-art.db.db/get-all-object-images)" "(get {\:image \\"PS3_95.706_Fnt_DD_JP09.jpg\\", \:object_id 11834}\\n     \:image)" "(get \:image {\:image \\"PS3_95.706_Fnt_DD_JP09.jpg\\", \:object_id 11834}\\n     )" "(\:image {\:image \\"PS3_95.706_Fnt_DD_JP09.jpg\\", \:object_id 11834}\\n     )" "(browse-art.search.search-engine/query \\"home\\")" "(name \:40876)" "(browse-art.db.db/get-object-name 37091)" "(browse-art.db.db/get-object-image 37091)" "(def tt {\\"Data\\"\:{\\"ObjectID\\"\:37178,\\"ObjectNumber\\"\:\\"95.730\\",\\"SortNumber\\"\:\\"    95   730                                            \\",\\"ObjectName\\"\:\\"woodblock prints\\",\\"DateBeginYear\\"\:1839,\\"DateEndYear\\"\:1863,\\"DateText\\"\:\\"ca. 1851\\",\\"Title\\"\:\\"Sugawara buyuden\\",\\"Dimensions\\"\:null,\\"Medium\\"\:\\"mulberry paper, color, ink\\",\\"Style\\"\:\\"Osaka School\\",\\"Culture\\"\:null,\\"Inscriptions\\"\:\\"[Signature] Hirosada\\",\\"Classification\\"\:\\"Prints\\",\\"Period\\"\:\\"late Edo\\",\\"Description\\"\:\\"The triplet sons of an aide to Sugawara, one of two feuding imperial regents, now have divided loyalties. The fierce Matsuomaru (Pine), at right, serves the second regent, Shihei. His brothers accuse him of betraying family allegiances. Just then Shihei's carriage arrives. The brothers Sakuramaru (Cherry) and Umeomaru (Plum) grab their swords in readiness.\\",\\"CreditLine\\"\:\\"Bequest of Robert S. Shaull, 1990\\",\\"ResourceURL\\"\:\\"http\://art.thewalters.org/detail/37178\\",\\"Keywords\\"\:\\"Kabuki; feud; Hirosada\\",\\"Provenance\\"\:\\"Robert S. Shaull [date and mode of acquisition unknown]; Walters Art Museum, 1990, by bequest.\\",\\"Dynasty\\"\:null,\\"Reign\\"\:null,\\"OnView\\"\:0,\\"PublicAccessDate\\"\:\\"2013-10-08T01\:00\:01.56\\",\\"Geographies\\"\:[{\\"GeographyID\\"\:1492832,\\"GeoType\\"\:\\"Place of Origin\\",\\"GeographyTerm\\"\:\\"Osaka\\",\\"GeoHierarchy\\"\:\\"The Thesaurus of Geographic Names\\\\\\\\World\\\\\\\\continents\\\\\\\\Asia\\\\\\\\nations\\\\\\\\Nihon\\\\\\\\regions\\\\\\\\Kinki\\\\\\\\urban prefectures\\\\\\\\Osaka\\\\\\\\inhabited places\\\\\\\\\\",\\"Latitude\\"\:\\"34 40\\",\\"LatitudeDirection\\"\:\\"N\\",\\"Longitude\\"\:\\"135 30\\",\\"LongitudeDirection\\"\:\\"E\\",\\"LatitudeNumber\\"\:34.666,\\"LongitudeNumber\\"\:135.5}],\\"RelatedObjects\\"\:null,\\"Images\\"\:[{\\"ID\\"\:51821,\\"IsPrimary\\"\:true,\\"Rank\\"\:1,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg\\"}},{\\"ID\\"\:51822,\\"IsPrimary\\"\:false,\\"Rank\\"\:2,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg\\"}},{\\"ID\\"\:51823,\\"IsPrimary\\"\:false,\\"Rank\\"\:3,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg\\"}},{\\"ID\\"\:51824,\\"IsPrimary\\"\:false,\\"Rank\\"\:4,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg\\"}}],\\"Collection\\"\:null,\\"MuseumLocation\\"\:{\\"LocationID\\"\:5307,\\"DisplayCurrentLocation\\"\:\\"Not On View\\",\\"LocationString\\"\:null},\\"Creators\\"\:[{\\"CreatorID\\"\:6406,\\"ConcatDisplayName\\"\:\\"Konishi Hirosada (Japanese, 1810-1864)\\",\\"Gender\\"\:\\"male\\",\\"Role\\"\:\\"Artist\\"}],\\"Exhibitions\\"\:null},\\"ReturnStatus\\"\:true,\\"ReturnCode\\"\:200,\\"ReturnMessage\\"\:[]})" "(json/read {\\"Data\\"\:{\\"ObjectID\\"\:37178,\\"ObjectNumber\\"\:\\"95.730\\",\\"SortNumber\\"\:\\"    95   730                                            \\",\\"ObjectName\\"\:\\"woodblock prints\\",\\"DateBeginYear\\"\:1839,\\"DateEndYear\\"\:1863,\\"DateText\\"\:\\"ca. 1851\\",\\"Title\\"\:\\"Sugawara buyuden\\",\\"Dimensions\\"\:null,\\"Medium\\"\:\\"mulberry paper, color, ink\\",\\"Style\\"\:\\"Osaka School\\",\\"Culture\\"\:null,\\"Inscriptions\\"\:\\"[Signature] Hirosada\\",\\"Classification\\"\:\\"Prints\\",\\"Period\\"\:\\"late Edo\\",\\"Description\\"\:\\"The triplet sons of an aide to Sugawara, one of two feuding imperial regents, now have divided loyalties. The fierce Matsuomaru (Pine), at right, serves the second regent, Shihei. His brothers accuse him of betraying family allegiances. Just then Shihei's carriage arrives. The brothers Sakuramaru (Cherry) and Umeomaru (Plum) grab their swords in readiness.\\",\\"CreditLine\\"\:\\"Bequest of Robert S. Shaull, 1990\\",\\"ResourceURL\\"\:\\"http\://art.thewalters.org/detail/37178\\",\\"Keywords\\"\:\\"Kabuki; feud; Hirosada\\",\\"Provenance\\"\:\\"Robert S. Shaull [date and mode of acquisition unknown]; Walters Art Museum, 1990, by bequest.\\",\\"Dynasty\\"\:null,\\"Reign\\"\:null,\\"OnView\\"\:0,\\"PublicAccessDate\\"\:\\"2013-10-08T01\:00\:01.56\\",\\"Geographies\\"\:[{\\"GeographyID\\"\:1492832,\\"GeoType\\"\:\\"Place of Origin\\",\\"GeographyTerm\\"\:\\"Osaka\\",\\"GeoHierarchy\\"\:\\"The Thesaurus of Geographic Names\\\\\\\\World\\\\\\\\continents\\\\\\\\Asia\\\\\\\\nations\\\\\\\\Nihon\\\\\\\\regions\\\\\\\\Kinki\\\\\\\\urban prefectures\\\\\\\\Osaka\\\\\\\\inhabited places\\\\\\\\\\",\\"Latitude\\"\:\\"34 40\\",\\"LatitudeDirection\\"\:\\"N\\",\\"Longitude\\"\:\\"135 30\\",\\"LongitudeDirection\\"\:\\"E\\",\\"LatitudeNumber\\"\:34.666,\\"LongitudeNumber\\"\:135.5}],\\"RelatedObjects\\"\:null,\\"Images\\"\:[{\\"ID\\"\:51821,\\"IsPrimary\\"\:true,\\"Rank\\"\:1,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_Fnt_BW_T93.jpg\\"}},{\\"ID\\"\:51822,\\"IsPrimary\\"\:false,\\"Rank\\"\:2,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwA_BW_T93.jpg\\"}},{\\"ID\\"\:51823,\\"IsPrimary\\"\:false,\\"Rank\\"\:3,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwB_BW_T93.jpg\\"}},{\\"ID\\"\:51824,\\"IsPrimary\\"\:false,\\"Rank\\"\:4,\\"ImageURLs\\"\:{\\"Tiny\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=50\\",\\"Small\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=100\\",\\"Medium\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=150\\",\\"Large\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg?width\=250\\",\\"Raw\\"\:\\"http\://static.thewalters.org/images/PL2_95.730_VwC_BW_T93.jpg\\"}}],\\"Collection\\"\:null,\\"MuseumLocation\\"\:{\\"LocationID\\"\:5307,\\"DisplayCurrentLocation\\"\:\\"Not On View\\",\\"LocationString\\"\:null},\\"Creators\\"\:[{\\"CreatorID\\"\:6406,\\"ConcatDisplayName\\"\:\\"Konishi Hirosada (Japanese, 1810-1864)\\",\\"Gender\\"\:\\"male\\",\\"Role\\"\:\\"Artist\\"}],\\"Exhibitions\\"\:null},\\"ReturnStatus\\"\:true,\\"ReturnCode\\"\:200,\\"ReturnMessage\\"\:[]})" "(json/read \\"http\://api.thewalters.org/v1/objects/37178.json?apikey\=4vyusmfXspfNUhVaDufgl8hxeGmoTWxZtLBL5AlGZF12KkVizFhFcbFwD0Gc0r3L&classification\=print\\")" "(json/read my-value-reader \\"http\://api.thewalters.org/v1/objects/37178.json?apikey\=4vyusmfXspfNUhVaDufgl8hxeGmoTWxZtLBL5AlGZF12KkVizFhFcbFwD0Gc0r3L&classification\=print\\")" "(clojure.string/split \\",\\" \\"as,d\\")" "(clojure.string/split \\"as,d\\" \#\\",\\")" "(count (browse-art.search.search-engine/query \\"\\"))" "(count (browse-art.search.search-engine/query \\"a\\"))" "(count (browse-art.search.search-engine/query \\"boat\\"))" "(browse-art.search.search-engine/query \\"fish\\")" "(browse-art.search.search-engine/query \\"man\\")" "(browse-art.core/db-initial-setup)" "(time (browse-art.data.indexer/add-to-index (browse-art.data.data-loader/import_data \\n              browse-art.data.data-loader/get_data_url)))" "(browse-art.db.db/select-all \\"object_list\\")" "(create-tables)" "(select-all \\"object_list\\")" "(select-all \\"word_list\\")" "(create-index)" "(add-to-index \\n  browse-art.data.data-loader/import_data \\n  browse-art.data.data-loader/get_data_url)" "(add-to-index \\n  (browse-art.data.data-loader/import_data \\n  browse-art.data.data-loader/get_data_url))" "(browse-art.db.db/create-tables)" "(browse-art.db.db/create-in)" "(browse-art.db.db/create-index)" "(browse-art.db.db/start-transaction(add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url)))" "(browse-art.db.db/start-transaction (add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url)))" "(browse-art.db.db/start-transaction add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))))" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (browse-art.data.indexer/add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))))" "(browse-art.db.db/create-tables)" "(browse-art.db.db/create-index)" "(browse-art.data.indexer/add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))" "(browse-art.db.db/create-tables)" "(browse-art.db.db/create-index)" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (browse-art.data.indexer/add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))))" "(browse-art.db.db/create-tables)" "(browse-art.db.db/create-index)" "(jdbc/with-connection db-spec\\r\\n    (jdbc/transaction (browse-art.data.indexer/add-to-index \\n     (browse-art.data.data-loader/import_data \\n     browse-art.data.data-loader/get_data_url))))" "(jdbc/find-connection)" "1" "(mg/get-db \\"monger-test\\")" "(mg/get-db conn \\"monger-test\\")" "(daj-mi)" "(browse-art.db.mongo/daj-mi)" "(dodaj)" "(daj-mi)" "(dodaj)" "(ubaci)" "(daj)" "(ubaci)" "(create-tables)" "(create-index)" "(get-indexes)" "(create-index)" "(get)" "(type? (get))" "(type (get))" "(create-index)" "(create-tables)" "(create-index)" "(get-indexes)" "(create-index)" "(get-indexes)" "(save-word-location 1 1 3)" "(save-word-location [1 1 3])" "(mc/find get \\"word_location\\")" "(mc/find (get) \\"word_location\\")" "(mc/find (daj) \\"word_location\\")" "(save-word-location [1 1 3])" "(mc/find (daj) \\"word_location\\")" "(ubaci)" "(mc/find (daj) \\"browse-art-db\\")" "(ubaci)" "(mc/find (daj) \\"word_location\\" \\"54ee40391eeb8f7ea352d09f\\")" "(mc/find (daj) \\"word_location\\")" "(mc/find (daj) \\"word_location\\" \\n         {\:location 1})" "(mc/find (daj) \\"word_location\\" \\n         {\:location 3})" "(mc/find (daj) \\"browse-art-db\\" \\n         {\:name \\"John\\"})" "(seq (mc/find (daj) \\"browse-art-db\\" \\n              {\:name \\"John\\"}))" "(seq (mc/find (daj) \\"word_location\\" \\n              {\:location 3}))" "(from-db-object (mc/find (daj) \\"word_location\\" \\n              {\:location 3}))" "(from-db-object (mc/find (daj) \\"word_location\\" \\n              {\:location 3}) true)" "(monger.conversion/from-db-object (mc/find (daj) \\"word_location\\" \\n              {\:location 3}) true)" "(def a (seq (mc/find (daj) \\"word_location\\" \\n                     {\:location 3})))" "(map monger.conversion/from-db-object a)" "(map (fn [o] \\n       (monger.conversion/from-db-object o true) a)" "(map (fn [o] \\n       (monger.conversion/from-db-object o true) a))" "(map (fn [o] \\n       (monger.conversion/from-db-object o true) a)" "(map (fn [o] \\n       (monger.conversion/from-db-object o true)) a)" "a" "(ubaci)" "(Object. \\"Jelena\\")" "(ObjectId. \\"Jelena\\")" "(ObjectId. \\"123\\")" "(ObjectId. 54ee44071eeb8f7ea352d0a0)" "(ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")" "(from-db-object (mc/find (daj) \\"word_location\\" \\n              {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(seq (mc/find (daj) \\"word_location\\" \\n                 {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(seq (mc/find (daj) \\"word_location\\" \\n                 {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n                 {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       ))" "(seq (mc/find (daj) \\"rowse-art-db\\" \\n       ))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:nio (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(\:_id {\:pets [\\"Sam\\" \\"Chelsie\\"], \:name \\"John\\", \:age 30, \:_id \#<ObjectId 54ee44071eeb8f7ea352d0a0>})" "(\:_id {\:pets [\\"Sam\\" \\"Chelsie\\"], \\n       \:name \\"John\\", \:age 30, \\n       \:_id (ObjectId. 54ee44071eeb8f7ea352d0a0)})" "(\:_id {\:pets [\\"Sam\\" \\"Chelsie\\"], \\n       \:name \\"John\\", \:age 30, \\n       \:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(seq (mc/find-one (daj) \\"browse-art-db\\" \\n       {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(monger.conversion/from-db-object (mc/find-one (daj) \\"browse-art-db\\" \\n          {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "(monger.conversion/from-db-object (mc/find-one (daj) \\"browse-art-db\\" \\n          {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}) true)" "(ubaci)" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:name \\"Joh'n\\"}))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:name \\"Joh'n\\"} {\:age}))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       {\:name \\"Joh'n\\"} {\:age 1}))" "(seq (mc/find (daj) \\"browse-art-db\\" \\n       ))" "(seq (mc/find-seq (daj) \\"browse-art-db\\" \\n       ))" "(mc/find-seq (daj) \\"browse-art-db\\" \\n  )" "(mc/find (daj) \\"browse-art-db\\" \\n  )" "(mc/find-one (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(mc/find-maps (daj) \\"browse-art-db\\" \\r\\n     )" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")} {\:image 2})" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")} {\:name 2})" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")})" "(\:age (mc/find-one-as-map (daj) \\"browse-art-db\\" \\n         {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")}))" "{keys \:a b}" "(keys { \:a \\"b\\" \:c 1}" "(keys { \:a \\"b\\" \:c 1})" "(keys \:a { \:a \\"b\\" \:c 1})" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")} {\:name 2 \:age 1} )" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {\:_id (ObjectId. \\"54ee44071eeb8f7ea352d0a0\\")} {\:name 2 \:age 2} )" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {} {\:name 2 \:age 2} )" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n   {}  )" "(mc/find-one-as-map (daj) \\"browse-art-db\\" \\n    )" "(mc/find-maps (daj) \\"browse-art-db\\" \\n   {} {\:name 2 \:age 2} )" "(mc/find-maps (daj) \\"browse-art-db\\" \\n   {} {\:name 2 } )" "(mg/command \\"select * from \\"word_location\\"\\")" "(mg/command \\"select * from word_location\\")" "(mg/command (daj) \\"select * from word_location\\")" "(mc/find-maps (daj) {\\"browse-art-db\\"\\n                     \\"word_list\\"}  )" "(db/get-all-object-images)" "(time (browse-art.data.indexer/add-to-index\\n        (import_data get_data_url)))" "(db/get-all-object-images)" "(count (db/get-all-object-images))" "(daj)" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object-id 115})" "(get-all-object-images)" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object-id 19940})" "(get-object-image\\n  (daj) \\"object_list\\"\\n  {\:object-id 19940})" "(get-object-image 19940)" "(get-object-image\\n  (daj) \\"object_list\\"\\n  {\:object-id 19940})" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object-id 19940})" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object_id 19940})" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object_id 199401})" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object-id 11844})" "(mc/find-one-as-map \\n  (daj) \\"object_list\\"\\n  {\:object-id 199401})" "(get-all-object-images)" "(get-object 19940)" "(int \\"1\\")" "(Integer. \\"1\\")" "(Integer. \\"154613\\")" "(get-object 19940)" "(get-object (Integer. \\"19940\\"))" "(if (get-object (Integer. \\"19940\\"))\\n  1 2)" "(db/get-object-image \\n  (Integer. \\"199401\\"))" "(browse-art.db.mongo/get-object-image \\n  (Integer. \\"199401\\"))" "(get-object-image \\n  (Integer. \\"199401\\"))" "(get-object-image \\n  199401)" "(get-all-object-images)" "(get-object-image \\n  19940)" "(get-object-image \\n  (Integer. \\"19940\\"))" "(db/get-object-image \\n  (Integer. \\"19940\\"))" "(mc/find (mg/get-db) \\"word_list\\" {\:word \\"art\\"})" "(mc/find (daj) \\"word_list\\" {\:word \\"art\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"art\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"fish\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"the\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"sun\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"man\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"go\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"plant\\"})" "(mc/find-maps (daj) \\"word_list\\" {\:word \\"Art\\"})" "(mc/find-maps (daj) \\"word_location\\" {\:word \\"art\\"})" "(mc/find-maps (daj) \\"word_location\\" {\:_id (ObjectId. \\n    \\"54ee59e41eeb774f61d0b658\\")})" "(mc/find-maps (daj) \\"word_location\\")" "(mc/find-maps (daj) \\"word_location\\" {\:word_id (ObjectId. \\n    \\"54ee59e41eeb774f61d0b658\\")})" "(get-match-rows \\"man\\")" "(get-match-rows \\"man art\\")" "(get-match-rows \\"man art sun\\")" "(db/get-word-id \\"sun\\")" "(db/get-word-id \\"man\\")" "(db/get-word-id \\"paper\\")" "(get-match-rows \\"man art paper\\")" "(get-word-id \\"sun\\")" "(get-word-id \\"boat\\")" "(get-word-id \\"man\\")" "(get-word-id \\"plant\\")" "(get-word-id \\"art\\")" "(execute-query \\"select w0.object_id,  w0.location ,  w1.location  \\nfrom word_location w0 , word_location w1  \\nwhere w0.word_id\=12  and w0.object_id\=w1.object_id and w1.word_id\=54ee59e41eeb774f61d0b5cf \\")" "(execute-query \\"select w0.object_id,  w0.location ,  w1.location  \\nfrom word_location w0 , word_location w1  \\nwhere w0.word_id\=12  and w0.object_id\=w1.object_id and w1.word_id\=29\\")" "(execute-query \\"select object_id, location,  location  \\nfrom word_location  \\nwhere word_id in (12,29) \\ngroup by object_id\\")" "(execute-query \\"select object_id, location  \\nfrom word_location  \\nwhere word_id in (12,29) \\ngroup by object_id\\")" "(execute-query \\"select object_id, location  \\nfrom word_location  \\nwhere word_id in (12,29)\\")" "(execute-query \\"select object_id, location, location  \\nfrom word_location  \\nwhere word_id in (12,29) \\ngroup by object_id\\")" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) \\")" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) group by word_id\\")" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) group by object_id word_id\\")" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) group by object_id, word_id\\")" "(mc/aggregate (daj) \\"word_location\\" \\n [{$project  {$group   {\:word_id   \\"$object_id\\"}}}])" "(mc/find (daj) \\"word_location\\" )" "(mc/find-maps (daj) \\"word_location\\" )" "(mc/aggregate (daj) \\"word_location\\" \\n [{$project  {$group   {\:word_id   \\"$object_id\\"}}}])" "(mc/aggregate (daj) \\"word_location\\" \\n [{$group   {\:word_id   \\"$object_id\\"}}])" "(mc/aggregate (daj) \\"word_location\\" \\n [{$group   {\:word_id   \\"$word_id\\"}}])" "(mc/aggregate (daj) \\"word_location\\" \\n [{$project {\\r\\n    \:word_id      1}}\\n  {$group   {\:word_id   \\"$word_id\\"}}])" "(mc/aggregate (daj) \\"word_location\\" \\n [{$project {\:_id 0\\r\\n    \:word_id      1}}\\n  {$group   {\:word_id   \\"$word_id\\"}}])" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) group by object_id, word_id\\")" "(execute-query \\"select *  \\nfrom word_location  \\nwhere word_id in (12,29) group by object_id\\")" "(mc/aggregate (return-db) coll \\n              [{$project\\n                {\:subtotal {$multiply [\\"$location\\", \\"$location\\"]}\\r\\n                 \:_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:subtotal {$multiply [\\"$location\\", \\"$location\\"]}\\r\\n                 \:_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:subtotal {$multiply [\\"$location\\", \\"$location\\"]}\\r\\n                 \:object_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:subtotal {$multiply [\\"$location\\", \\"$location\\"]}\\r\\n                 \:_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"}\\r\\n                 \:_id     \\"$object_id\\"}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:subtotal \\"$location\\"\\r\\n                 \:_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\r\\n                 \:_id     \\"$object_id\\"}}])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:_id     \\"$object_id\\"}\\n                {$group \\r\\n                 {\:_id   \\"$word_id\\"}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:_id     \\"$object_id\\"}\\n                }\\n               {$group \\r\\n                 {\:_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\:_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\:object_id \\"$object_id\\"\\n                  \:word_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:word_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:_id   \\"$word_id\\"\\n                  \:a \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:_id   \\"$word_id\\"\\n                  \:object_ID \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:_id   \\"$word_id\\"\\n                  \:object_id \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [\\n               {$group \\r\\n                 {\\n                  \:_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:_id     \\"$object_id\\"}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:word_id \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:word_id \\"$ord_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:word_id   \\"$word_id\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:total {$sum \\"$location\\"}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:total \\"$location\\"}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:total {$group {\:loc \\"$location\\"}}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:a \\"word_id\\"\\n                  \:total {$sum \\"$location\\"}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n               ])" "(get-word-id \\"man\\")" "(mc/find-maps (return-db) \\"word_location\\" {\:word_id (ObjectId. \\"54ee59e41eeb774f61d0b658\\")})" "(def mapa (mc/find-maps (return-db) \\"word_location\\" {\:word_id (ObjectId. \\"54ee59e41eeb774f61d0b658\\")}))" "(map \\n  (fn [wl]\\n    (println (rest mapa)))\\n  mapa)" "(rest mapa)" "(mc/find-maps (return-db) \\"word_location\\" {\:word_id (ObjectId. \\"54ee59e41eeb774f61d0b658\\")})" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:word_id {$in [(ObjectId. \\"54ee59e41eeb774f61d0b658\\")]}}}\\n               ])" "1" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"\\n                  \:word_id {$in [(ObjectId. \\"54ee59e41eeb774f61d0b658\\")]}}}\\n               ])" "(mc/aggregate (return-db) \\"word_location\\" \\n              [{$project\\n                {\:location \\"$location\\"\\n                 \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n               ])" "(count (mc/aggregate (return-db) \\"word_location\\" \\n                     [{$project\\n                       {\:location \\"$location\\"\\n                        \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                       {$group \\r\\n                 {\:_id   \\"$object_id\\"}}\\n                      ]))" "(count (mc/aggregate (return-db) \\"word_location\\" \\n                     [{$project\\n                       {\:location \\"$location\\"\\n                        \:word_id \\"$word_id\\"\\r\\n                 \:object_id     \\"$object_id\\"}}\\n                       {$group \\r\\n                 {\:_id   \\"$word_id\\"}}\\n                      ]))" "(mc/find-maps (return-db) \\"word_location\\" {\:word_id (ObjectId. \\"54ee59e41eeb774f61d0b658\\")})" "(mc/find (return-db) \\"word_location\\" {\:word_id (ObjectId. \\"54ee59e41eeb774f61d0b658\\")})" "mapa" "(conj '(1 2) 3)" "(conc '(1 2) 3)" "(concat '(1 2) 3)" "(cons '(1 2) 3)" "(cons 3 '(1 2))" "(reduce\\n  (fn[lista red]\\n    (conj {\:location (\:location red) \:object_id (\:object_id red)}))\\n  '()\\n  mapa)" "(reduce\\n  (fn[lista red]\\n    (conj lista {\:location (\:location red) \:object_id (\:object_id red)}))\\n  '()\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (map \\n      (fn[e]\\n        (if (\= (\:object_id red) (\:object_id e))\\n          (assoc e (keyword ()) (\:location red)) \\n          (conj lista {\:location (\:location red) \:object_id (\:object_id red)})))\\n      lista)\\n    (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n  []\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (map \\n      (fn[e]\\n        (if (\= (\:object_id red) (\:object_id e))\\n          (assoc e (keyword ()) (\:location red)) \\n          (conj lista {\:location (\:location red) \:object_id (\:object_id red)})))\\n      acc)\\n    (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n  []\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (map \\n      (fn[e]\\n        (if (\= (\:object_id red) (\:object_id e))\\n          (assoc e (keyword ()) (\:location red)) \\n          (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n      acc)\\n    (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n  []\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (map \\n      (fn[e]\\n        (if (\= (\:object_id red) (\:object_id e))\\n          (assoc e (keyword (str \\"location\\" (\:_id red))) (\:location red)) \\n          (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n      acc)\\n    (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n  []\\n  mapa)" "mapa" "(reduce\\n  (fn[acc red]\\n    (map \\n      (fn[e]\\n        (if (\= (\:object_id red) (\:object_id e))\\n          (assoc e (keyword (str \\"location\\" (\:_id red))) (\:location red)) \\n          (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n      acc))\\n  []\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (if-not (empty? acc)\\n      (map \\n        (fn[e]\\n          (if (\= (\:object_id red) (\:object_id e))\\n            (assoc e (keyword (str \\"location\\" (\:_id red))) (\:location red)) \\n            (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n        acc)\\n       (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n  []\\n  mapa)" "(reduce\\n  (fn[acc red]\\n    (if-not (empty? acc)\\n      (map \\n        (fn[e]\\n          (if (\= (\:object_id red) (\:object_id e))\\n            (assoc e (keyword (str \\"location\\" (\:_id red))) (\:location red)) \\n            (conj acc {\:loc (\:location red) \:object_id (\:object_id red)})))\\n        acc)\\n       (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n  []\\n  mapa)" "(conj [] {})" "(conj [{}] {})" "(assoc {} \:ko 1)" "(assoc {\:ko 2} \:ko 1)" "(reduce\\n  (fn[acc red]\\n    (if-not (empty? acc)\\n      (map \\n        (fn[e]\\n          (println e))\\n        acc)\\n       (conj acc {\:location (\:location red) \:object_id (\:object_id red)})))\\n  []\\n  mapa)" "mapa" "(get-word-id \\"sun\\")" "(get-word-id \\"see\\")" "(get-word-id \\"sea\\")" "(get-word-id \\"plant\\")" "(get-word-id \\"fish\\")" "(get-word-id \\"boat\\")" "(get-word-id \\"man\\")" "(execute-query \\"select w0.object_id,  w0.location  \\r\\nfrom word_location w0  \\r\\nwhere w0.word_id\=12 \\")" "(execute-query \\"select w0.object_id,  w0.location  \\r\\nfrom word_location w0  \\r\\nwhere w0.word_id\=486 \\")" "(reduce\\n  (fn[acc red]\\n       (conj acc {\:location (\:location red) \:object_id (\:object_id red)})\\n  []\\n  mapa))" "(reduce\\n  (fn[acc red]\\n       (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n  []\\n  mapa)" "(def vektor (reduce\\n              (fn[acc red]\\n                   (conj acc {\:location (\:location red) \:object_id (\:object_id red)}))\\n              []\\n              mapa))" "(reduce \\n  (fn[acc e]\\n    (merge acc e))\\n  vektor\\n  vektor)" "(sort-by \:object_id > vektor)" "vektor" "(get-word-id \\"sun\\")" "(get-word-id \\"man\\")" "(get-word-id \\"boat\\")" "(get-word-id \\"woman\\")" "(mc/find-maps (return-db) \\"word_location\\" \\n              {\:word_id ($in (ObjectId. \\"54ee59e41eeb774f61d0b658\\") (ObjectId. \\"54ee59e51eeb774f61d0bc0b\\"))})" "(mc/find-maps (return-db) \\"word_location\\" \\n              {\:word_id ($in [(ObjectId. \\"54ee59e41eeb774f61d0b658\\") (ObjectId. \\"54ee59e51eeb774f61d0bc0b\\")])})" "(mc/find-maps (return-db) \\"word_list\\" \\n              {\:word ($in [\\"man\\" \\"woman\\"])})" "(mc/find-maps \\"word_list\\" \\n              {\:word ($in [\\"man\\" \\"woman\\"])})" "(mc/find-maps (return-db) \\"word_location\\" \\n              {\:word_id {$in [(ObjectId. \\"54ee59e41eeb774f61d0b658\\") (ObjectId. \\"54ee59e51eeb774f61d0bc0b\\")]}})" "(mc/find-maps (return-db) \\"word_location\\" \\n              {\:word_id {$in [ (ObjectId. \\"54ee59e51eeb774f61d0bc0b\\")]}})" "(create-tables)" "(create-index)" "(browse-art.data.indexer/add-to-index \\n  (import_data get_data_url))" "(get-word-id \\"man\\")" "(get-word-id \\"woman\\")" "(execute-query \\"select w0.object_id,  w0.location ,  w1.location  \\r\\nfrom word_location w0 , word_location w1  \\r\\nwhere w0.word_id\=77  and w0.object_id\=w1.object_id and w1.word_id\=505 \\")" "(select-all \\"word_location\\")" "(browse-art.data.indexer/add-to-index \\n  (import_data get_data_url))" "*ns*" "(browse-art.data.indexer/add-to-index \\n  (import_data get_data_url))" "(execute-query \\"select w0.object_id,  w0.location ,  w1.location  \\r\\nfrom word_location w0 , word_location w1  \\r\\nwhere w0.word_id\=77  and w0.object_id\=w1.object_id and w1.word_id\=505 \\")" "(get-word-id \\"woman\\")" "(get-word-id \\"man\\")" "(select-all \\"word_location\\")" "(select-all \\"word_list\\")" "(save-word-location 1 2 3)" "(save-word-location [1 2 3])" "(select-all \\"word_list\\")" "(select-all \\"word_location\\")" "(save-word-location [1 2 3])" "(select-all \\"word_location\\")" "(save-word-location 1 2 3)" "(select-all \\"word_location\\")" "(create-tables)" "(create-index)" "(time (browse-art.data.indexer/add-to-index \\n       (import_data get_data_url)))" "(execute-query \\"select w0.object_id,  w0.location ,  w1.location  \\r\\nfrom word_location w0 , word_location w1  \\r\\nwhere w0.word_id\=77  and w0.object_id\=w1.object_id and w1.word_id\=505 \\")" "(get-object 16000)" "server" "(.stop server)" "(stop server)" "(.stop server)" "(compile (symbol \\"browse-art.core\\")" "(compile (symbol \\"browse-art.core\\"))" "(compile (symbol \\"browse-art.view.search_template\\"))" "(compile '(symbol \\"browse-art.view.search_template\\")" "(compile 'browse-art.view.search_template)" "(compile 'browse-art.view.search-template)" "(compile 'browse-art.view.searchtemplate)" "(load \\"browse-art/view/search_template\\")" "(compile 'browse-art.view.search-template)" "(compile 'browse-art.search.search-engine)" "(count (select-all \\"object_list\\"))" "(import_data get_data_url)" "(import_data)" "(time (browse-art.data.indexer/add-to-index (import_data)))" "(count (select-all \\"object_list\\"))" "(time (start-transaction browse-art.data.indexer/add-to-index\\r\\n      (browse-art.data.data-loader/import_data)))" "(time (start-transaction \\n        (browse-art.data.indexer/add-to-index\\r\\n      (browse-art.data.data-loader/import_data))))" "(time (start-transaction \\n        '(browse-art.data.indexer/add-to-index\\r\\n      (browse-art.data.data-loader/import_data))))" "(time (start-transaction \\n        (jdbc/with-connection db-spec\\n        (browse-art.data.indexer/add-to-index\\r\\n      (browse-art.data.data-loader/import_data)))))" "(time (start-transaction \\n        (jdbc/with-connection db-spec\\n          (jdbc/transaction\\n          (browse-art.data.indexer/add-to-index\\r\\n            (browse-art.data.data-loader/import_data))))))" "(time (jdbc/with-connection db-spec\\n        (jdbc/transaction\\n        (browse-art.data.indexer/add-to-index\\r\\n            (browse-art.data.data-loader/import_data)))))" "(count (select-all \\"object_list\\"))" "(start-transaction (select-all \\"object_list\\"))" "(start-transaction jdbc/transaction* (select-all \\"object_list\\"))" "'(1)" "(1)" "'~\\n  (1)" "(start-transaction (select-all \\"object_list\\"))" "(start-transaction select-all \\"object_list\\")" "select-all" "(type select-all)" "(type jdbc)" "(type jdbc/as-key)" "(type jdbc/transaction)" "(type jdbc/transaction*)" "(start-transaction select-all \\"object_list\\")" "(start-transaction (select-all \\"object_list\\"))" "(count (select-all \\"object_list\\"))" "(execute-query \\"select distinct creator \\nfrom object_list\\")" "(count (execute-query \\"select distinct creator \\nfrom object_list\\"))" "(count (execute-query \\"select distinct style \\nfrom object_list\\"))" "(count (execute-query \\"select distinct collection \\nfrom object_list\\"))" "(count (execute-query \\"select distinct period \\nfrom object_list\\"))" "(count (execute-query \\"select distinct medium\\nfrom object_list\\"))" "(execute-query \\"select distinct medium\\nfrom object_list\\")" "(count (execute-query \\"select distinct period \\nfrom object_list\\"))" "(execute-query \\"select distinct period \\nfrom object_list\\")" "(count (execute-query \\"select distinct collection \\nfrom object_list\\"))" "(count (execute-query \\"select distinct style \\nfrom object_list\\"))" "(count (execute-query \\"select distinct creator \\nfrom object_list\\"))" "(execute-query \\"select distinct style \\nfrom object_list\\")" "(execute-query \\"select distinct creator \\nfrom object_list\\")" "(count (execute-query \\"select distinct keywords \\nfrom object_list\\"))" "(execute-query \\"select distinct keywords \\nfrom object_list\\")" "(count (execute-query \\"select count (*) \\nfrom word_list\\"))" "(execute-query \\"select count (*) \\nfrom word_list\\")" "(execute-query \\"select distinct creator \\nfrom object_list\\")" "(execute-query \\"select count (*) \\nfrom word_list\\")" "(execute-query \\"select distinct word\\nfrom word_list\\")" "(count (execute-query \\"select distinct word\\nfrom word_list\\"))" "(count (execute-query \\"select distinct word_id\\nfrom word_location\\"))" "(execute-query \\"select count (*) word\\nfrom word_list\\")" "(execute-query \\"select count (*)\\nfrom word_list\\")" "(execute-query \\"select count (*)\\nfrom word_location\\")" "(count (execute-query \\"select *\\nfrom word_location\\ngroup by word_id\\"))" "(execute-query \\"select word\\nfrom word_list\\")" "(execute-query \\"select distinct word\\nfrom word_list\\")" "(map \#(\:word %)(execute-query \\"select distinct word\\nfrom word_list\\"))" "(map \#(\:word %)(execute-query \\"select distinct school\\nfrom object_list\\"))" "(map \#(\:word %)(execute-query \\"select distinct style\\nfrom object_list\\"))" "(map \#(\:style %)(execute-query \\"select distinct style\\nfrom object_list\\"))" "(map \#(\:medium %)(execute-query \\"select distinct medium\\nfrom object_list\\"))" "(map \#(\:dateBeginYear %)(execute-query \\"select distinct dateBeginYear\\nfrom object_list\\"))" "(execute-query \\"select * from object_list limit 1\\")" "(map \#(\:date_begin_year %)(execute-query \\"select distinct date_begin_year\\nfrom object_list\\"))" "(map \#(\:date_end_year %)(execute-query \\"select distinct date_end_year\\nfrom object_list\\"))" "(execute-query \\"select count(*) from word_list \\")" "(execute-query \\"select count(distinct word) from word_list \\")" "(execute-query \\"select count(distinct word_id) from word_location \\")" "(execute-query \\"select count(*) from word_location \\")" "(execute-query \\"select count(*) from word_location group by word_id\\")" "(execute-query \\"select count(distinct word_id) from word_location \\")" "(execute-query \\"select count(*) from word_location \\")" "(execute-query \\"select word_id from word_location group by object_id\\")" "(count (execute-query \\"select word_id from word_location group by object_id\\"))" "(count (execute-query \\"select object_id \\nfrom word_location group by word_id\\"))" "(execute-query \\"select (count word_id) \\nfrom word_location \\ngroup by object_id\\")" "(execute-query \\"select (count *) \\nfrom word_location \\ngroup by object_id\\")" "(execute-query \\"select (count word_id) \\n from word_location \\ngroup by object_id\\")" "(execute-query \\"select (count *) \\n from word_location \\ngroup by object_id\\")" "(execute-query \\"select (count *) from word_location \\ngroup by object_id\\")" "(execute-query \\"select count(*) from word_location group by object_id\\")" "(execute-query \\"select count(*) object_id from word_location group by object_id\\")" "(execute-query \\"select count(*), object_id from word_location group by object_id\\")" "(count (execute-query \\"select * \\nfrom word_location where object_id\=6167\\")" "(count (execute-query \\"select * \\nfrom word_location where object_id\=6167\\"))" "(execute-query \\"select count(*) as pojavljivanje, object_id \\nfrom word_location group by object_id order by pojavljivanje\\")" "(execute-query \\"select count(*) as pojava, object_id \\nfrom word_location group where pojava > 30 and pojava <60 by object_id order by pojava\\")" "(execute-query \\"select count(*) as pojava, object_id \\nfrom word_location where pojava > 30 and pojava <60 \\ngroup by object_id order by pojava\\")" "(execute-query \\"select count(*) as pojava, object_id \\nfrom word_location where pojava > 30 and pojava <60 \\ngroup by object_id \\")" "(execute-query \\"select count(*) as pojava, object_id \\nfrom word_location \\ngroup by object_id\\nhaving pojava > 30 and pojava <60 \\")" "(execute-query \\"select count(*) as pojava, object_id, word\\nfrom word_location join word_list using (word_id)\\ngroup by object_id\\nhaving pojava > 30 and pojava <60 \\")" "(execute-query \\"select count(*) as pojava, l.object_id, w.word\\nfrom word_location l join word_list w on (l.word_id \= w.id)\\ngroup by l.object_id\\nhaving pojava > 30 and pojava <60 \\")" "(execute-query \\"select count(*) as pojava, l.object_id, w.word\\nfrom word_location l join word_list w on (l.word_id \= w.id)\\ngroup by l.object_id\\nhaving pojava > 30 and pojava <60 \\norder by pojava\\")" "(count (execute-query \\"select count(*) as pojava, l.object_id, w.word\\nfrom word_location l join word_list w on (l.word_id \= w.id)\\ngroup by l.object_id\\nhaving pojava > 30 and pojava <60 \\norder by pojava\\"))" "(count (execute-query \\"select count(*) as pojava, l.object_id, w.word\\nfrom word_location l join word_list w on (l.word_id \= w.id)\\ngroup by l.object_id, l.word_id\\nhaving pojava > 30 and pojava <60 \\norder by pojava\\"))" "(count (execute-query \\"select count(*) as pojava, l.object_id\\nfrom word_location l \\ngroup by l.object_id, l.word_id\\nhaving pojava > 30 and pojava <60 \\norder by pojava\\"))" "(count (execute-query \\"select *\\nfrom word_location l \\ngroup by l.object_id, l.word_id\\"))" "(count (execute-query \\"select *\\nfrom word_location l \\ngroup by l.object_id\\"))" "(count (execute-query \\"select *\\nfrom word_location l \\ngroup by l.word_id, l.object_id\\"))" "(use 'clj-ml.data)" "(use 'clj-ml)" "ds" "kmeans" "(clusterer-info)" "(clusterer-cluster kmeans ds)" "(first (clusterer-cluster kmeans ds))" "(type (first (clusterer-cluster kmeans ds)))" "(first (first (clusterer-cluster kmeans ds)))" "kmeans" "(first kmeans)" "(type (first (clusterer-cluster kmeans ds)))" "(first (clusterer-cluster kmeans ds))" "(DenseInstance/toDoubleArray (first (clusterer-cluster kmeans ds)))" "(ClojureInstancesIterator/next \\n  (clusterer-cluster kmeans ds))" "(cljml.ClojureInstancesIterator/next \\n  (clusterer-cluster kmeans ds))" "(is (\= weka.core.DenseInstance\\n       (class (first (clusterer-cluster kmeans ds)))))" "(if (\= weka.core.DenseInstance\\n       (class (first (clusterer-cluster kmeans ds)))) 1 2)" "ds" "(.next weka.core.DenseInstance (first (clusterer-cluster kmeans ds)))" "(.next (first (clusterer-cluster kmeans ds)))" "(.numValues (first (clusterer-cluster kmeans ds)))" "(index (first (clusterer-cluster kmeans ds)) (.numValues (first (clusterer-cluster kmeans ds))))" "(.index (first (clusterer-cluster kmeans ds)) (.numValues (first (clusterer-cluster kmeans ds))))" "(.index (second (clusterer-cluster kmeans ds)) (.numValues (second (clusterer-cluster kmeans ds))))" "(clusterer-cluster kmeans ds)" "(.value (first (clusterer-cluster kmeans ds)) 3)" "(.value (first (clusterer-cluster kmeans ds)) 2)" "(.value (second (clusterer-cluster kmeans ds)) 2)" "(separate-words \\"123 sdf as\\")" "(some true false)" "(any true false)" "(if-some true false)" "(number? 123)" "(number? \\"123\\")" "(re-find \\"\\\\d\\" \\"123\\")" "(re-find \#\\"\\\\d\\" \\"123\\")" "(re-find \#\\"\\\\d\\" \\"sd\\")" "(re-find \#\\"\\\\d\\" \\"sd5\\")" "(if-not \\n  (and (ignoreWord? \\"at\\") (containsNumber? \\"at\\"))\\n  1 2)" "(if-not \\n  (or (ignoreWord? \\"at\\") (containsNumber? \\"at\\"))\\n  1 2)" "(if-not \\n  (or (ignoreWord? \\"a2\\") (containsNumber? \\"a2\\"))\\n  1 2)" "(if-not \\n  (or (ignoreWord? \\"aasd-\\") (containsNumber? \\"aasd-\\"))\\n  1 2)" "(if-not \\n  (or (ignoreWord? \\"1989-12\\") (containsNumber? \\"1989-12\\"))\\n  1 2)" "(execute-query \\"select count(*) from object_list\\")" "(execute-query \\"truncate object_list\\")" "(execute-query \\"trungate object_list\\")" "(execute-query \\"truncate table object_list\\")" "(execute-query \\"delete from object_list\\")" "(with-db jdbc/delete-rows \\"object_list)\\"" "(with-db jdbc/delete-rows \\"object_list\\")" "(with-db jdbc/delete-rows \\"object_list\\" nil)" "(execute-query \\"select count(*) from object_list\\")" "(jdbc/with-connection db-spec)" "(execute-query \\"select count(*) from object_list\\")" "(execute-query \\"\\n(EXISTS (SELECT * \\r\\n                 FROM INFORMATION_SCHEMA.TABLES \\r\\n                 WHERE TABLE_SCHEMA \= 'browse-art-project' \\r\\n                 AND  TABLE_NAME \= 'object_list'))\\")" "(execute-query \\"select * \\nfrom sys.objects\\")" "(create-tables)" "(execute-query \\"select * \\nfrom sys.objects\\")" "(execute-query \\"SELECT name FROM sqlite_master WHERE type\='table' AND name\='table_name';\\")" "(execute-query \\"SELECT name \\nFROM sqlite_master \\nWHERE type\='table' AND name\='object_list';\\")" "(execute-query \\"SELECT name \\nFROM sqlite_master \\nWHERE type\='table' AND name\='object_lista';\\")" "(exists-table?)" "(if (exists-table?) 1 2)" "(if nil 1 2)" "(exists-table?)" "(execute-query \\"select count(*) from object_list\\")" "(time)" "(quot (System/currentTimeMillis) 1000)" "(execute-query \\"select count(*) from object_list\\")" "(jdbc)" "(jdbc/with-connection)" "(jdbc/with-connection db-spec)" "(jdbc/with-query-results res \\n  \\"select count(*) from object_list\\"\\n  (doall res))" "(jdbc/with-query-results res \\n  [\\"select count(*) from object_list\\"]\\n  (doall res))" "(jdbc/with-connection db-spec\\n  (println \\"1\\")\\n  (+ 1 2)\\n  (jdbc/with-query-results res \\r\\n     [\\"select count(*) from object_list\\"]\\r\\n     (doall res)))" "(jdbc/with-connection db-spec\\n  (println \\"1\\")\\n  (+ 1 2)\\n  (get-id \\"object_list\\" \\"object_id\\" 6000))" "(jdbc/with-connection db-spec\\n  (get-id \\"object_list\\" \\"object_id\\" 6000))" "(start-transaction db-spec\\n  (get-id \\"object_list\\" \\"object_id\\" 6000))" "(db/start-transaction (indexed? 1111))" "(db/start-transaction (indexer/indexed? 1111))" "(jdbc/connection)" "(jdbc/find-connection)" "(db-connection)" "(jdbc/with-query-results res [\\"SELECT name \\r\\n                  FROM sqlite_master \\r\\n                  WHERE type\='table' AND name\='object_list';\\"])" "(db-connection (jdbc/with-query-results res [\\"SELECT name \\r\\n                  FROM sqlite_master \\r\\n                  WHERE type\='table' AND name\='object_list';\\"]))" "(.getNumConnectionsDefaultUser (db-connection))" "(pooled-db)" "(db-connection)" "(db-connection) (jdbc/with-query-results res [\\"SELECT name \\r\\n                  FROM sqlite_master \\r\\n                  WHERE type\='table' AND name\='object_list';\\"])" "(db-connection (jdbc/with-query-results res [\\"SELECT name \\r\\n                  FROM sqlite_master \\r\\n                  WHERE type\='table' AND name\='object_list';\\"]))" "(select-all \\"object_list\\")" "(eval com.mchange.v2.c3p0.ComboPooledDataSource)" "(doto com.mchange.v2.c3p0.ComboPooledDataSource)" "(doto (com.mchange.v2.c3p0.ComboPooledDataSource.))" "(doto (ComboPooledDataSource.))" "(doto (ComboPooledDataSource.)\\r\\n               (.setDriverClass (\:classname spec)) \\r\\n               (.setJdbcUrl (str \\"jdbc\:\\" (\:subprotocol spec) \\"\:\\" (\:subname spec)))\\r\\n               ;; expire excess connections after 30 minutes of inactivity\:\\r\\n               (.setMaxIdleTimeExcessConnections (* 30 60))\\r\\n               ;; expire connections after 3 hours of inactivity\:\\r\\n               (.setMaxIdleTime (* 3 60 60)))" "(doto (ComboPooledDataSource.)\\r\\n               (.setDriverClass (\:classname db-spec)) \\r\\n               (.setJdbcUrl (str \\"jdbc\:\\" (\:subprotocol db-spec) \\"\:\\" (\:subname db-spec)))\\r\\n               ;; expire excess connections after 30 minutes of inactivity\:\\r\\n               (.setMaxIdleTimeExcessConnections (* 30 60))\\r\\n               ;; expire connections after 3 hours of inactivity\:\\r\\n               (.setMaxIdleTime (* 3 60 60)))" "(delay (pool db-spec))" "(browse-art.data.indexer/add-to-index (browse-art.data.data-loader/import_data))" "pooled-db" "(db-spec)" "db-spec" "(db-connection)" "(select-all \\"object_list\\")" "(.getConnection db-connection)" "(jdbc/with-connection db-connection\\r\\n    (jdbc/with-query-results rs [\\"select * from object_list\\"]\\r\\n        (doseq [row rs]\\r\\n            (println row))))" "pooled-db" "(jdbc/with-connection db-connection\\r\\n    (jdbc/with-query-results rs [\\"select * from object_list\\"]\\r\\n        (doseq [row rs]\\r\\n            (println row))))" "(jdbc/connection (db-connection))" "(jdbc/with-connection* (db-connection) nil)" "(jdbc/with-connection* (db-connection) [])" "(select-all \\"word_list\\")" "(get-id \\"object_list\\" \\"object_id\\" 115)" "(start-transaction (jdbc/with-query-results res [(str \\"select object_id, image from object_list\\")]\\r\\n    (doall res)))" "(get-spec)" "(start-transaction (jdbc/with-query-results res [(str \\"select object_id, image from object_list\\")]\\r\\n    (doall res)))" "(execute-query \\"select count(*) from word_location\\")" "(execute-query \\"select count(*) from word_location group by object_id\\")" "(count (execute-query \\"select count(*) from word_location group by object_id\\"))" "(execute-query \\"select * word_location\\")" "(execute-query \\"select * from word_location\\")" "(execute-query \\"select * from word_location \\ngroup by object_id\\")" "(execute-query \\"select count(*) from word_location \\nwhere object_id\=3570 and word_id\=13\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere object_id\=3570 group by word_id\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere object_id\=3570 group by word_id, object_id\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere object_id\=3570 group by object_id,word_id\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere object_id\=3570 group by word_id\\")" "(execute-query \\"select count(*),word_id from word_location \\ngroup by word_id, object_id\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere word_id\=254\\")" "(execute-query \\"select count(*),word_id from word_location \\nwhere word_id\=13\\")" "(execute-query \\"select count(*) as w,word_id from word_location \\nwhere word_id\=13 order by w\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\ngroup by word_id, object_id order by c\\")" "(execute-query \\"select word from word_list where word_id\=164\\")" "(execute-query \\"select word from word_list where id\=164\\")" "(execute-query \\"select word from word_list where id\=68\\")" "(execute-query \\"select word from word_list where id\=13\\")" "(execute-query \\"select word from word_list where id\=236\\")" "(execute-query \\"select word from word_list where id\=235\\")" "(execute-query \\"select word from word_list where id\=175\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\nwhere c>1 and c <4 group by word_id, object_id order by c\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\n group by word_id, object_id order by c c>1 and c <4\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\n group by word_id, object_id order by c having c>1 and c <4\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\n group by word_id, object_id order by c having c>1\\")" "(execute-query \\"select count(*) as c,word_id from word_location \\n group by word_id, object_id having c>1 order by c \\")" "(execute-query \\"select count(*) as c,word_id from word_location \\n group by word_id, object_id having c>1 and c<4 order by c \\")" "(execute-query \\"select count(*) as c,word_id \\nfrom word_location \\n group by word_id, object_id having c>(select count(*) from word_list)*0.10 and c<4 order by c \\")" "(select count(*) from word_list)" "(execute-query (select count(*) from word_list))" "(execute-query \\"select count(*) from word_list\\")" "(* 255 0.1)" "(execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\")" "(execute-query \\"select count(*) as c,word_id, sum(c) from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\")" "(reduce \#(+ % %2) 0 (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(reduce \#(+ % {\:c %2}) 0 (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(reduce \#( {\:c %})  (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(reduce \#(println {\:c %})  (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(map \#(println {\:c %})  (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(reduce \#(+ % (\:c %2)) 0 (execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id having c>1 and c<4 order by c \\"))" "(execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by word_id, object_id order by c \\")" "(execute-query \\"select count(*) as c,word_id from word_location \\r\\n    group by\\n object_id order by c \\")" "(execute-query \\"select sum(count(*)) as c,word_id from word_location \\r\\n    group by\\n word_id \\")" "(execute-query \\"SELECT count(*) as c, \\nsum(c)\\r\\nFROM word_location\\r\\nGROUP BY word_id; \\")" "(execute-query \\"SELECT count(*) as c, \\nsum(c)\\r\\nFROM word_location\\r\\nGROUP BY word_id \\")" "(execute-query \\"SELECT count(*)\\r\\nFROM word_location\\r\\nwhere word_id\=68 \\")" "(execute-query \\"SELECT count(location) \\r\\nFROM word_location\\r\\nGROUP BY word_id \\")" "(execute-query \\"SELECT count(location), word_id \\r\\nFROM word_location\\r\\nGROUP BY word_id \\")" "(execute-query \\"SELECT count(location) as c, word_id \\r\\nFROM word_location\\r\\nGROUP BY word_id \\norder by c\\")" "(reduce \#(+ % (\:c %2)) (execute-query \\"SELECT count(location) as c, word_id \\r\\nFROM word_location\\r\\nGROUP BY word_id \\norder by c\\"))" "(reduce \#(+ % (\:c %2)) 0 (execute-query \\"SELECT count(location) as c, word_id \\r\\nFROM word_location\\r\\nGROUP BY word_id \\norder by c\\"))" " (execute-query \\"SELECT *\\r\\nFROM word_list\\")" "(reduce (fn[acc row]\\n          (conj (\:words acc) (\:word row))\\n          (conj (\:word-ids acc) (\:id row))) \\n        {\:words [] \:word-ids []} (execute-query \\"SELECT *\\r\\nFROM word_list\\"))" "(reduce (fn[acc row]\\n          {\:words (conj (\:words acc) (\:word row))\\n          \:word-ids (conj (\:word-ids acc) (\:id row))}) \\n        {\:words [] \:word-ids []} (execute-query \\"SELECT *\\r\\nFROM word_list\\"))" " (execute-query \\"SELECT word\\r\\nFROM word_list where id\=255\\")" " (execute-query \\"SELECT count(*)\\r\\nFROM word_location where word_id\=68 and object_id\=4105\\")" " (execute-query \\"SELECT count(*)\\r\\nFROM word_location where word_id\=68 and object_id\=12\\")" "(count-word-occurrence 68 4105)" "(count-word-occurrence 68 410)" "(get-all-object-ids)" "(reverse [1 2 3])" "(conj [1 2 3] 2)" "(process-words)" " (execute-query \\"SELECT word\\r\\nFROM word_list where id\=1\\")" " (db/execute-query \\"SELECT word\\r\\nFROM word_list where id\=1\\")" " (db/execute-query \\"SELECT word\\r\\nFROM word_list where id\=2\\")" " (db/execute-query \\"SELECT word\\r\\nFROM word_list where id\=3\\")" "(db/get-all-object-ids)" "(browse-art.data.clusterer/crete-dataset)" "(process-words)" "(create-struct (\:word-ids (process-words)))" "(create-instances (\:word-ids (process-words)))" "(db/get-all-object-ids)" "(count-word-occurrence 68 410)" "(db/count-word-occurrence 68 410)" "(create-instances (\:word-ids (process-words)))" "(\:word-ids (process-words)" "(\:word-ids (process-words))" "(db/get-all-object-ids)" "(db/count-word-occurrence 1 3570)" "(create-instances ([1 2 3]))" "(create-instances [1 2 3])" "(create-instances (\:word-ids (process-words)))" "(db/count-word-occurrence 1 1)" "(create-instances [1 2 3])" "(db/count-word-occurrence 1 1)" "(first (db/count-word-occurrence 1 1))" "(create-instances (\:word-ids (process-words)))" "(crete-dataset)" "(dataset-remove-attribute-at \\n  (create-instances (\:word-ids (process-words))) 1)" "(def ds (make-dataset \\"name\\" [\:object-id \:width {\:kind [\:good \:bad]}] [ [12 34 \:good] [24 53 \:bad] ]))" "ds" "(dataset-remove-attribute-at \\n  (crete-dataset) 1)" "ds" "(dataset-remove-attribute-at \\n  ds 1)" "(make-clusters (create-dataset))" "(create-dataset)" "(make-clusters (create-dataset))" "ds" "(make-clusters (create-dataset))" "(create-dataset)" "(make-clusters (create-dataset))" "(count (\:words words-map))" "(make-clusters (create-dataset))" "(db/execute-query \\"select count(*) from object_list\\")" "(db/execute-query \\"select * \\nfrom object_list where object_id\=3939\\")" "(db/execute-query \\"update object_list \\nset period\='Late EDO' where object_id\=3939\\")" "(with-db jdbc/update-values \\"object_list\\"\\n  [\\"object_id\=3939\\"] {\:period \\"late EDO\\"})" "(db/execute-query \\"update object_list \\nset period\='Late EDO' where object_id\=3939\\")" "(db/execute-query \\"select * \\nfrom object_list where object_id\=3939\\")" "(execute-query \\"select * \\nfrom object_list where object_id\=3939\\")" "(loop [x 10]\\r\\n  (when (> x 1)\\r\\n    (println x)\\r\\n    (recur (- x 2))))" "(loop [x 0]\\r\\n  (when (< x (count object-ids))\\r\\n    (println x)\\r\\n    (recur (inc x))))" "object-ids" "(get (count object-ids) object-ids)" "(get (dec (count object-ids)) object-ids)" "(get 99 object-ids)" "(get 98 object-ids)" "(get object-ids 99)" "(get 0 [1 2])" "(at 0 [1 2])" "(get  [1 2] 0)" "(get  '{1 2) 0)" "(get  '(1 2) 0)" "words-map" "(db/get-all-object-ids)" "object-ids" "(get  [1 2] 0)" "(loop [x 0]\\r\\n  (when (< x (count object-ids))\\r\\n    (println x)\\r\\n    (recur (inc x))))" "(count object-ids)" "(add-cluster-info [1 2 3])" "(make-clusters)" "(execute-query \\"select object_id \\nwhere cluster\=1\\")" "(execute-query \\"select object_id \\nfrom object_list \\nwhere cluster\=1\\")" "(execute-query \\"select object_id \\nfrom object_list \\nwhere cluster\=1.0\\")" "(execute-query \\"select object_id,cluster \\nfrom object_list \\n\\")" "(add-cluster-info 79684 1.0)" "(execute-query \\"select object_id,cluster \\nfrom object_list \\n\\")" "(make-clusters (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids))" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select object_id,cluster \\nfrom object_list \\n\\")" "(execute-query \\"select object_id,cluster \\nfrom object_list order by object_list \\n\\")" "(execute-query \\"select object_id,cluster \\nfrom object_list order by object_id \\n\\")" "(execute-query \\"select count (*)\\nfrom object_list\\")" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(execute-query \\"select count (*)\\nfrom object_list\\")" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select count(*)\\nfrom word_location group by word_id\\")" "(execute-query \\"select count(*) c\\nfrom word_location group by word_id order by c\\")" "(execute-query \\"select count(*) c\\nfrom word_location group by word_id\\nhaving c>1 and c<50 order by c\\")" "(execute-query \\"select count(*) c, word_id\\nfrom word_location group by word_id\\nhaving c>1 and c<50 order by c\\")" "(execute-query \\"select count(*) c, word_id\\nfrom word_location group by word_id\\nhaving c>5 and c<50 order by c\\")" "(execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c>5 and c<50 order by c\\")" "(execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c>50 order by c\\")" "(execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c<5 order by c\\")" "(execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c>50 order by c\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c>5 and c<50 order by c\\")" "(db/execute-query \\n  \\"select count(*) c, word_id, word\\nfrom word_location l join word_list w on (l.word_id\=w.id) \\ngroup by word_id\\nhaving c>5 and c<50 order by c\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(db/execute-query \\r\\n     \\"select count(*) c, word_id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>1 and c<60 order by c\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(db/execute-query \\r\\n     \\"select count(*) c, word_id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>1 and c<60 order by c\\")" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(def object-ids (make-clusters \\n       (reduce \#(conj % (\:object_id %2)) [] \\n               (db/get-all-object-ids))))" "(def object-ids \\n       (reduce \#(conj % (\:object_id %2)) [] \\n               (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(db/execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(execute-query \\"select word\\nfrom word_list order by word\\")" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>1 and c<60 order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>60 order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c<1 order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c<2 order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c\=60 order by c\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>50 order by c\\")" "(execute-query \\r\\n     \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>30 order by c\\")" "1" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(process-words)" "(create-dataset (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids) \\n                       (\:word-ids (process-words)) )" "(create-dataset \\n  (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)) \\n         (\:word-ids (process-words)) )" "(create-instances \\n  (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)) \\n         (\:word-ids (process-words)) )" "(\:words (process-words))" "(conj (\:words (process-words)) 123)" "(into [] 1)" "(into 1 [])" "(into 1 [2])" "(cons 1 [2])" "(vec (cons 1 [2]))" "(vec 1 [2])" "(vector 1 [2])" "(create-instances \\n  (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)) \\n         (\:word-ids (process-words)) )" "(vec (cons (\:words (process-words)) \:object-id))" "(vec (cons (\:words (process-words) \:object-id))" "(vec (cons (\:words (process-words) \:object-id)))" "(vec (conj (\:words (process-words) \:object-id)))" "(vec (conj (\:words (process-words)) \:object-id))" "(process-words)" "(\:words process-words)" "(process-words)" "(\:words (process-words))" "(create-dataset (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)) (\:words (process-words))" "(create-dataset \\n  (reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)) \\n  (\:words (process-words)))" "(vec (cons (\:words (process-words)) \:object-id))" "(vec (conj (\:words (process-words)) \:object-id))" "(cons [ 1] 2)" "(conj [ 1] 2)" "(cons 2 [ 1])" "(vec (conj (\:words (process-words)) \:object-id))" "(vec (cons \:object-id (\:words (process-words)) ))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(time (vec (cons \:object-id (\:words words-map) )))" "(time (vec (cons \:object-id (\:words (process-words)) )))" "(time ((reduce \#(conj % (\:object_id %2)) [] (db/get-all-object-ids)))" "(time (reduce \#(conj % (\:object_id %2)) [] \\n               (db/get-all-object-ids)))" "(execute-query \\"select object_id, cluster\\nfrom object_list order by object_id\\")" "(make-clusters \\n  (reduce \#(conj % (\:object_id %2)) [] \\n          (db/get-all-object-ids)))" "1" "(execute-query (select * from object_list where cluster\=2))" "(execute-query (\\"select * from object_list where cluster\=2\\"))" "(execute-query \\"select * from object_list where cluster\=2\\")" "(execute-query \\"select object_id, image from object_list where cluster\=2\\")" "(execute-query \\n  \\"select object_id, image \\nfrom object_list where cluster\=2 and object_id <> 175\\")" "(repeatedly 2 \#(rand-nth [2 3 4 5 6 7]))" "(repeatedly 2 \#(rand-nth nil))" "(if (repeatedly 2 \#(rand-nth nil)) 1 2)" "(empty? (repeatedly 2 \#(rand-nth nil)) 1 2)" "(empty? (repeatedly 2 \#(rand-nth nil)) )" "(get-recommendation 1 2)" "(get-recommendation 1 10)" "(execute-query \\n  \\"select cluster \\nfrom object_list where object_id \=61\\")" "(get-recommendation 61 1)" "(repeatedly 3 \#(rand-nth \\n                 (get-recommendation 61 1)))" "(count nil)" "(execute-query \\n  \\"select cluster,object_id \\nfrom object_list order by object_id\\")" "(execute-query \\n  \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>1 and c<60\\")" "(execute-query \\n  \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>1 and c<60 order by c\\")" "(execute-query \\n  \\"select cluster,object_id \\nfrom object_list order by object_id\\")" "(iterate (fn [ignored-arg] (.nextInt r max)) (.nextInt r max))" "(let [max (dec 5)\\r\\n        r (new Random)]\\r\\n    (iterate (fn [ignored-arg] (.nextInt r max)) (.nextInt r max)))" "(execute-query \\n  \\"select cluster,object_id \\nfrom object_list order by object_id\\")" "(execute-query \\n  \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>60 order by c\\")" "(execute-query \\n  \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>50 order by c\\")" "(execute-query \\n  \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>5 and c<60 order by c\\")" "(count (execute-query \\n         \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>5 and c<60 order by c\\"))" "(count (execute-query \\n         \\"select count(*) c, w.id, word \\r\\n   from word_location l join word_list w on (l.word_id\=w.id ) \\r\\n   group by word_id having c>4 and c<60 order by c\\"))" "(execute-query \\n  \\"select cluster,object_id \\nfrom object_list order by object_id\\")"]
eclipse.preferences.version=1
